setwd("~/DataVisualization/DrCannata/DV_RProject2/01 Data/CSVs")
setwd("~/DataVisualization/DrCannata/DV_RProject2/01 Data/CSVs")
file_path <- "Diabetes.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("encounter_id", "patient_nbr", "time_in_hospital", "num_lab_procedures", "num_procedures", "num_medications" , "number_outpatient", "number_emergency", "number_inpatient", "number_diagnoses")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
setwd("~/DataVisualization/DrCannata/DV_RProject2/01 Data/CSVs")
file_path <- "Diabetes.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("encounter_id", "patient_nbr", "weight", "time_in_hospital", "num_lab_procedures", "num_procedures", "num_medications" , "number_outpatient", "number_emergency", "number_inpatient", "number_diagnoses")
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Fix date columns, this needs to be done by hand because | needs to be correct.
#                                                        \_/
df$Order_Date <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Order_Date), tz="UTC")))
df$Ship_Date  <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Ship_Date),  tz="UTC")))
# The following is an example of dealing with special cases like making state abbreviations be all upper case.
# df["State"] <- data.frame(lapply(df["State"], toupper))
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from titanic where sex is not null"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
df %>% tbl_df
require("dplyr")
df %>% tbl_df
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from Diabetes"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
require("jsonlite")
require("RCurl")
require("dplyr")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from Diabetes"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
require("jsonlite")
require("RCurl")
require("dplyr")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from Diabetes"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jzp78', PASS='orcl_jzp78', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
names(df)
summary(df)
df %>% select(time_in_hospital, NUM_MEDICATIONS, READMITTED) %>% filter(readmitted == "<30") %>% View()
require("dplyr")
require("RCurl")
require("jsonlite")
df %>% select(time_in_hospital, NUM_MEDICATIONS, READMITTED) %>% filter(readmitted == "<30") %>% View()
df %>% select(TIME_IN_HOSPITAL, NUM_MEDICATIONS, READMITTED) %>% filter(readmitted == "<30") %>% View()
df %>% select(TIME_IN_HOSPITAL, NUM_MEDICATIONS, READMITTED) %>% filter(READMITTED == "<30") %>% View()
df %>% select(RACE, AGE, NUM_MEDICATIONS) %>% group_by(AGE, RACE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS))
require("jsonlite")
require("RCurl")
require("dplyr")
df %>% select(RACE, AGE, NUM_MEDICATIONS) %>% group_by(AGE, RACE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS))
df %>% select(RACE, AGE, NUM_MEDICATIONS) %>% filter(race = c("AfricanAmerican", "Asian", "Caucasian", "Hispanic", "Other")) %>% group_by(AGE, RACE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS))
df %>% select(RACE, AGE, NUM_MEDICATIONS) %>% filter(race == c("AfricanAmerican", "Asian", "Caucasian", "Hispanic", "Other")) %>% group_by(AGE, RACE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS))
df %>% select(RACE, AGE, NUM_MEDICATIONS) %>% filter(RACE == c("AfricanAmerican", "Asian", "Caucasian", "Hispanic", "Other")) %>% group_by(AGE, RACE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS))
df %>% select(RACE, AGE, NUM_MEDICATIONS) %>% filter(RACE == c("AfricanAmerican", "Asian", "Caucasian", "Hispanic", "Other")) %>% group_by(AGE, RACE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS)) %>% View()
df %>% select(RACE, AGE, NUM_MEDICATIONS) %>% filter(RACE == c("AfricanAmerican", "Asian", "Caucasian", "Hispanic", "Other")) %>% group_by(AGE, RACE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS)) %>% View()
dw1 <- df %>% select(TIME_IN_HOSPITAL, NUM_MEDICATIONS, READMITTED) %>% filter(READMITTED == "<30") %>% View()
dw1 <- df %>% select(TIME_IN_HOSPITAL, NUM_MEDICATIONS, READMITTED) %>% filter(READMITTED == "<30")
dw2 <- df %>% select(RACE, AGE, NUM_MEDICATIONS) %>% filter(RACE == c("AfricanAmerican", "Asian", "Caucasian", "Hispanic", "Other")) %>% group_by(AGE, RACE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS))
df %>% select(GENDER, AGE, NUM_MEDICATIONS) %>% group_by(GENDER, RACE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS)) %>% View()
df %>% select(GENDER, AGE, NUM_MEDICATIONS) %>% group_by(GENDER) %>% summarize(meanMeds = mean(NUM_MEDICATIONS)) %>% View()
df %>% select(GENDER, AGE, NUM_MEDICATIONS) %>% group_by(GENDER, AGE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS)) %>% View()
df %>% select(GENDER, AGE, NUM_MEDICATIONS) %>% filter(age == c("MALE", "FEMALE")) %>% group_by(GENDER, AGE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS)) %>% View()
df %>% select(GENDER, AGE, NUM_MEDICATIONS) %>% filter(AGE == c("MALE", "FEMALE")) %>% group_by(GENDER, AGE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS)) %>% View()
df %>% select(GENDER, AGE, NUM_MEDICATIONS) %>% filter(AGE == c("male", "female")) %>% group_by(GENDER, AGE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS)) %>% View()
df %>% select(GENDER, AGE, NUM_MEDICATIONS) %>% filter(AGE == c("Male", "Female")) %>% group_by(GENDER, AGE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS)) %>% View()
df %>% select(GENDER, AGE, NUM_MEDICATIONS) %>% filter(GENDER == c("Male", "Female")) %>% group_by(GENDER, AGE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS)) %>% View()
dw1 %>% ggplot(aes(x=TIME_IN_HOSPITAL, y=NUM_MEDICATIONS)) + geom_point() + facet_wrap(~clarity)
require("ggplot2")
require("dplyr")
dw1 %>% ggplot(aes(x=TIME_IN_HOSPITAL, y=NUM_MEDICATIONS)) + geom_point() + facet_wrap(~clarity)
dw1 %>% ggplot(aes(x=TIME_IN_HOSPITAL, y=NUM_MEDICATIONS, color=READMITTED)) + geom_point() + facet_wrap(~clarity)
dw1 %>% ggplot(aes(x=TIME_IN_HOSPITAL, y=NUM_MEDICATIONS, color=READMITTED)) + geom_point() + facet_wrap(~READMITTED)
dw2 %>% ggplot(aes(x=RACE, y=NUM_MEDICATIONS, color=AGE)) + geom_point()
dw2 %>% ggplot(aes(x=RACE, y=NUM_MEDICATIONS, color=AGE)) + geom_point()
dw2 <- df %>% select(RACE, AGE, NUM_MEDICATIONS) %>% filter(RACE == c("AfricanAmerican", "Asian", "Caucasian", "Hispanic", "Other")) %>% group_by(AGE, RACE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS))
dw2 %>% ggplot(aes(x=RACE, y=NUM_MEDICATIONS, color=AGE)) + geom_point()
dw3 %>% ggplot(aes(x=RACE, y=NUM_MEDICATIONS, color=AGE)) + geom_point()
dw3 <- df %>% select(GENDER, AGE, NUM_MEDICATIONS) %>% filter(GENDER == c("Male", "Female")) %>% group_by(GENDER, AGE) %>% summarize(meanMeds = mean(NUM_MEDICATIONS))
dw3 %>% ggplot(aes(x=RACE, y=NUM_MEDICATIONS, color=AGE)) + geom_point()
dw3 %>% ggplot(aes(x=GENDER, y=NUM_MEDICATIONS, color=AGE)) + geom_point()
dw2 %>% ggplot(aes(x=RACE, y=meanMeds, color=AGE)) + geom_point()
dw3 %>% ggplot(aes(x=GENDER, y=meanMeds, color=AGE)) + geom_point()
dw2 %>% ggplot(aes(x=AGE, y=meanMeds, color=RACE)) + geom_point()
dw3 %>% ggplot(aes(x=AGE, y=meanMeds, color=GENDER)) + geom_point()
